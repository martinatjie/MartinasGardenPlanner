// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MartinasGardenPlanner.Migrations
{
    [DbContext(typeof(PlantContext))]
    [Migration("20240303152038_InitialCreate4")]
    partial class InitialCreate4
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.2");

            modelBuilder.Entity("Plant", b =>
                {
                    b.Property<int>("PlantId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("BirdsAttract")
                        .HasColumnType("TEXT");

                    b.Property<string>("CareInstructions")
                        .HasColumnType("TEXT");

                    b.Property<string>("Color")
                        .HasColumnType("TEXT");

                    b.Property<string>("CommonName")
                        .HasColumnType("TEXT");

                    b.Property<string>("GrowthRate")
                        .HasColumnType("TEXT");

                    b.Property<bool>("HasAggressiveRootSystem")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsClimber")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsDeciduous")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsFlowering")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsIndigenous")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsPoisonous")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsWaterSmart")
                        .HasColumnType("INTEGER");

                    b.Property<double>("MaxHeight")
                        .HasColumnType("REAL");

                    b.Property<string>("PestsProne")
                        .HasColumnType("TEXT");

                    b.Property<string>("PlantType")
                        .HasColumnType("TEXT");

                    b.Property<string>("ScientificName")
                        .HasColumnType("TEXT");

                    b.Property<string>("SoilType")
                        .HasColumnType("TEXT");

                    b.Property<string>("SunRequirement")
                        .HasColumnType("TEXT");

                    b.HasKey("PlantId");

                    b.ToTable("Plants");
                });

            modelBuilder.Entity("PlantCompanions", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CompanionPlantId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PlantId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CompanionPlantId");

                    b.HasIndex("PlantId");

                    b.ToTable("PlantCompanions");
                });

            modelBuilder.Entity("PlantCompanions", b =>
                {
                    b.HasOne("Plant", null)
                        .WithMany()
                        .HasForeignKey("CompanionPlantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Plant", null)
                        .WithMany()
                        .HasForeignKey("PlantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
